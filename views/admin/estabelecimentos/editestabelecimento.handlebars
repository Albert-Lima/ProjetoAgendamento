<!--Esta é a página que será carregada ao clicar no botão de estabelecimentos-->
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/addEstabelecimento.css">
    <title>Estabelecimentos</title>
</head>
<body>
    {{#if erros}}
        {{#each erros}}
            <div class="container_poupUpError">{{texto}}</div>
        {{/each}}
    {{/if}}
    <aside class="ContainerMenuLeft">
        <div class="ContainerLogoPanel">
            <img src="/images/logoGlamii.png" alt="glamii software">
        </div>
        {{>menuEstabelecimentos}}
        <a href="/logout" class="boxButtons" id="LogOut">
            <div class="ContainerIconMenuLeft"><img src="/images/icons8-sair-100.png" alt="Deslogar"></div>
            <p>LogOut</p>
        </a>
    </aside>
    <main class="panel">
        <header class="HeaderPanel">
            <div>
                <button class="ReturnButton"><img src="/images/icons8-esquerda-50 (1).png" alt="retornar"></button>
            </div>
            <div class="infoUsuario">
                {{#if user}}
                    <span>{{user.name}}</span>
                {{else}}
                    erro ao carregar os dados
                {{/if}}
            </div>
        </header>
        <section class="ConteinerInfo">
            <section class="PanelAddEstabelecimento">
                {{#if estabelecimento}}
                <form action="/editestabelecimento/{{estabelecimento._id}}" method="post" id="formulario">
                    <section>
                        <input type="text" name="nomeEstabelecimento" id="" placeholder="nome" value="{{estabelecimento.nomeEstabelecimento}}">
                        <input type="tel"  inputmode="numeric" oninput="this.value = this.value.replace(/[^0-9]/g, '')" name="phoneEstabelecimento" id="" placeholder="Whatsapp do estabelecimento" class="numbersInput">
                        <input type="text" name="endereco" id="" placeholder="Endereço" value="{{estabelecimento.endereco}}">
                    </section>
                    <section class="SelectProfissionais">
                        <div id="AbaSelectProfissionais">Profisisonais Ativos</div>
                        <section class="ContainerProfissionaisNames">
                            {{#each profissionais}}
                                <label class="LabelCheckBoxAddProfissional">
                                    <input type="checkbox" name="profissionais" value="{{_id}}">
                                    {{name}}
                                </label>
                            {{else}}
                                <p class="textCompletePerfil">Você ainda não tem profissionais cadastrados</p>
                                <a href="/profissionais" class="linkCompletePerfil">Cadastre profissionais</a>
                            {{/each}}
                        </section>
                    </section>
                    <section class="rangeHours">
                        <h2 class="titleForm">Selecione o intervalo de tempo de cada agendamento com um profissional:</h2>
                        <input type="range" id="horarioRange" name="rangeHorario" min="1" max="24" step="1" value="1">
                        <span id="horarioValue">1 h</span>
                    </section>
                    <section class="horarioDeFuncionamento">
                        <h2 class="titleForm">Expediente:</h2>
                        <div>
                            <span>
                                <p>inicio:</p>
                                <input type="number" name="horarioInicial" min="0" max="23" id="horarioInicial" value="{{estabelecimento.horarioInicial}}" placeholder="{{estabelecimento.horarioInicial}}">
                            </span>
                            <span>
                                <p>fim:</p>
                                <input type="number" name="horarioFinal" min="0" max="24" id="horarioFinal" value="{{estabelecimento.horarioFinal}}" placeholder="{{estabelecimento.horarioFinal}}">
                            </span>
                        </div>
                    </section>
                    <section class="diasFuncionamento">
                        <h2 class="titleForm">Selecione os dias de funcionamento:</h2>
                        <section class="ContainerDiasFuncionamento">
                            {{#each dias}}
                                <label class="LabelCheckBoxDias">
                                    <input type="checkbox" name="diasFuncionamento" value="{{this}}">
                                    {{this}}
                                </label>
                            {{else}}
                                erros ao listar dias de funcionamento
                            {{/each}}
                        </section>
                    </section>
                    <nav class="barRightAddEstabelecimentos">
                        <a href="/estabelecimentos" id="buttonReturnEstabelecimentos">cancelar</a>
                        <button  type="submit" form="formulario">salvar</button>
                    </nav>
                </form>
                <!--Script para mostrar os números de celular corretamente no formulário-->
                <script>
                    const phoneInput = document.querySelector(".numbersInput");
                    const form = phoneInput.closest("form");

                    function formatPhoneNumber(value) {
                        value = value.replace(/\D/g, ""); // Remove tudo que não for número

                        if (value.length > 2) {
                            value = `(${value.slice(0, 2)}) ` + value.slice(2);
                        }
                        if (value.length > 10) {
                            value = value.slice(0, 10) + "-" + value.slice(10);
                        }

                        return value;
                    }

                    // Formata ao digitar
                    phoneInput.addEventListener("input", function (e) {
                        e.target.value = formatPhoneNumber(e.target.value);
                    });

                    // Formata ao carregar a página
                    window.addEventListener("DOMContentLoaded", function () {
                        phoneInput.value = formatPhoneNumber(phoneInput.value);
                    });

                    // Remove formatação antes de enviar
                    form.addEventListener("submit", function (e) {
                        const rawNumber = phoneInput.value.replace(/\D/g, ""); // Remove a formatação
                        phoneInput.value = rawNumber;
                    });
                </script>
                {{else}}
                erro ao renderizar o formulário
                {{/if}}
            </section>
        </section>
    </main>
    <!--return to main dashboard-->
    <script>
        document.querySelector('.ReturnButton').addEventListener('click', function () {
            history.back(); // Volta para a página anterior
        });

    </script>
    <script>
        //checkboxes
        const labels = document.querySelectorAll('.LabelCheckBoxAddProfissional');
        labels.forEach(label => {
            label.addEventListener('click', function() {
                const checkbox = this.querySelector('input[type="checkbox"]');
                checkbox.checked = !checkbox.checked;
                this.classList.toggle('active', checkbox.checked);
            });
        });

        //range
        const rangeInput = document.getElementById('horarioRange');
        const horarioValue = document.getElementById('horarioValue');

        rangeInput.addEventListener('input', function() {
            horarioValue.textContent = this.value + " h"; // Atualiza o valor mostrado
        });


        //controle dos inputs de horario
        document.getElementById('horarioInicial').addEventListener('input', function() {
            let inicio = parseInt(this.value);
            let fim = parseInt(document.getElementById('horarioFinal').value);

            if (inicio < 0 || inicio > 23) {
                alert('O horário de início deve estar entre 0 e 23.');
                this.value = Math.max(0, Math.min(inicio, 23)); // Mantém o valor entre 0 e 23
            }

            // Verifica se o início é maior que o fim
            if (fim && inicio > fim) {
                this.value = fim;
            }
        });

        document.getElementById('horarioFinal').addEventListener('input', function() {
            let fim = parseInt(this.value);
            let inicio = parseInt(document.getElementById('horarioInicial').value);

            if (fim < 0 || fim > 24) {
                alert('O horário final deve estar entre 0 e 24.');
                this.value = Math.max(0, Math.min(fim, 24)); // Mantém o valor entre 0 e 24
            }

            // Verifica se o fim é menor que o início
            if (inicio && fim < inicio) {
                this.value = inicio;
            }
        });
    </script>
    <!--estilização ranger-->
    <script>
        const input = document.getElementById("horarioRange");

        function updateBg(el) {
        const percent = ((el.value - el.min) / (el.max - el.min)) * 100;
        el.style.background = `linear-gradient(to right, #209F84 ${percent}%, #ccc ${percent}%)`;
        }

        input.addEventListener("input", () => updateBg(input));
        updateBg(input);
    </script>
</body>
</html>