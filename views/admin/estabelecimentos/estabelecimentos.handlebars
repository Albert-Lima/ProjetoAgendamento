<!--Esta é a página que será carregada ao clicar no botão de estabelecimentos-->
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estabelecimentos</title>
</head>
<body>
    <aside class="ContainerMenuLeft">
        <div class="ContainerLogoPanel">
            LOGO AQUI
        </div>
        {{>menuEstabelecimentos}}
    </aside>
    <main class="panel">
        <header class="HeaderPanel">
            <div>
                <button class="doboutButton"><img src="/images/icons8-dúvida-100.png" alt="manual da aplicação"></button>
            </div>
            <div class="infoUsuario">
                {{#if user}}
                    <span>{{user.name}}</span>
                    <span class="userPicture"><!--<img src="/images/perfilGendaiTeste.png" alt="imagem do usuário">--></span>
                {{else}}
                    erro ao carregar os dados
                {{/if}}
            </div>
        </header>
        <section class="ConteinerInfo">
            <section class="viewPanel">
                {{#each estab}}
                    <div class="testediv">
                        <div class="descEstabelecimento">                
                            <h2>{{nomeEstabelecimento}}</h2>
                            <span>Horário de funcionamento: {{horarioInicial}}h ás {{horarioFinal}}h</span>
                            <span>{{endereco}}</span>
                        </div>
                        <a href="/editestabelecimento/{{_id}}" class="buttonConfig"><!--deve levar para a página de editar estabelecimento-->
                            <img src="/images/icons8-configurações-100.webp" alt="configurações do estabelecimento">
                        </a>
                    </div>
                    <section class="containerDataEstab">
                        <div class="sectionGraphic">
                            <header>Agendamentos no mês</header>
                            <canvas class="containerGraphic" id="myChart"></canvas>
                        </div>
                        <div class="ContainerClassificacaoProf">
                            Profissionais com mais atendimentos
                                {{#each profissionais}}
                                    <span class="containerTopProf">
                                        <a href=""><div></div>{{this.name}}</a>
                                    </span>
                                {{else}}
                                    <span class="containerTopProfLinkAdd">
                                        <a href="/profissionais">ainda não há profissionais</a>
                                    </span>
                                {{/each}}
                        </div>
                    </section>
                {{else}}
                    <div class="buttonLink">
                        <a href="/addestabelecimento"><img src="/images/icons8-adicionar-100.webp" alt="novoEstabelecimento"></a>
                    </div>
                {{/each}}
            </section>
        </section>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script><!--Buscando o ChartJS-->

    <!--Script para buscar os dados do Gráfico-->
    <script>

  // Faz a requisição para buscar os dados
  document.addEventListener('DOMContentLoaded', () => {
  fetch('/agendamentospordias')
    .then((response) => {
      if (!response.ok) {
        throw new Error('Erro na requisição');
      }
      return response.json();
    })
    .then((data) => {
      const ctx = document.getElementById('myChart').getContext('2d');
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: data.labels, // Datas no eixo X
          datasets: [{
            label: 'Agendamentos',
            data: data.data, // Quantidade no eixo Y
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1,
          }],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 1, // Define incrementos de 1
                callback: function (value) {
                  return Number.isInteger(value) ? value : ''; // Mostra apenas inteiros
                },
              }
            },
          },
        },
      });
    })
    .catch((error) => console.error('Erro ao buscar dados:', error));
});
    </script>
</body>
</html>